import java.util.Scanner;

import tt1.print;
import tt1.read;

import java.util.List;
import java.awt.AWTException;
import java.util.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;

/**
 * <p>类{@code Main}是主类，主要对其他的类进行调用
 * @author luoZH
 * @since 2018/10/20
 */

public class Main
{
	static int n=30,m=50;
	/**
	 * <p>游戏是否结束的标志
	 */
	static boolean game_over;
	static Battlefield bf=new Battlefield();
	public static void main(String[] args)throws AWTException
	{
		/*print s=new print();
		read  r=new read();
		
		t1=new Thread(s,"print_map");
		t1.setPriority(10);
		t2=new Thread(r,"read_file");
		t1.start();
		t2.start();*/
		//Thread t1,t2;
		new Thread(new Runnable()
		{
			public synchronized void run()
			{
				System.out.printf("accept the input of file\n");
				String content[]=new String[55];
				int tt=0;
				boolean ski=false;
				 try {
			            int size=0;
			            //定义一个字节缓冲区,该缓冲区的大小根据需要来定义
			            byte[] buffer=new byte[1024];
			            FileInputStream fis=new FileInputStream(new File("C:\\Users\\BL8\\Desktop\\inputtext.txt"));
			           // FileReader fr=new FileReader(new File("C:\\Users\\BL8\\Desktop\\inputtext.txt"));
			            //循环来读取该文件中的数据
			            while((size=fis.read(buffer))!=-1){
			                content[tt]=new String(buffer, 0, size);
			                System.out.printf("%d:",tt);
			                System.out.println(content[tt]);
			                if(tt==6&&content[tt].equals("Skills"))
			                {
			                	ski=true;System.out.println("yes1");
			                }
			                if(ski==true&&content[tt].equals("Boom"))
			                {
			                	System.out.println("Boom~~~");
			                }
			                tt++;
			            }
			        //关闭此文件输入流并释放与此流有关的所有系统资源。 
			        fis.close();
			        } catch (Exception e) {
			            e.printStackTrace();
			        }
				 System.out.printf("end the input of file\n");
				 try {
					    Thread.sleep(200);
					} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					    e.printStackTrace();
					}tt=2;
				//Battlefield bf=new Battlefield();
				bf.init_map();
				bf.show_of_battlefield();
				
				int i=0;
				bf. creat_hero1();bf.show_of_battlefield();
				try {
				    Thread.sleep(1000);
				} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				    e.printStackTrace();
				}
				while(i<tt)
				{
					if(i==0)
					{
						bf. creat_hero1();bf.show_of_battlefield();
					}
					else
					{
						try {
							bf.boom1();
						}catch (InterruptedException e) {
						    e.printStackTrace();
						}
					}
					i++;
					try {
					    Thread.sleep(1000);
					} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					    e.printStackTrace();
					}
				}//System.out.printf("Over");
			}
		}
			).start();
		
		Scanner sc=new Scanner(System.in);
		//inputfile();
		game_over=false;
		String cc,ss;
		while(game_over==false)	
		{
			System.out.printf("please choose your operation :\n");
			System.out.printf("Creathero Movehero  Attack Skills\n");
			cc=sc.next();
			if(cc.equals("Creathero"))
			{
				if(bf. creat_hero())
					bf.show_of_battlefield();
			}
			if(cc.equals("Movehero"))
			{
				if(bf.move_hero())
					bf.show_of_battlefield();
			}
			if(cc.equals("Attack"))
			{
				bf.attack();
			}
			if(cc.equals("Skills"))
			{
				System.out.printf("Choose the skill you want to show:\n");
				System.out.printf("Escape Boom \n");
				ss=sc.next();
				if(ss.equals("Escape"))
					bf.quick_escape();
				if(ss.equals("Boom"))
					bf.boom();
			}
			if(bf.game_over())
			{
				System.out.printf("You win the game!\n");
				break;
			}
		}
	}
	
	static void inputfile()throws AWTException
	{
		System.out.printf("accept the input of file\n");
		String content[]=new String[55];
		int tt=0;
		boolean ski=false;
		 try {
	            int size=0;
	            //定义一个字节缓冲区,该缓冲区的大小根据需要来定义
	            byte[] buffer=new byte[1024];
	            FileInputStream fis=new FileInputStream(new File("C:\\Users\\BL8\\Desktop\\inputtext.txt"));
	           // FileReader fr=new FileReader(new File("C:\\Users\\BL8\\Desktop\\inputtext.txt"));
	            //循环来读取该文件中的数据
	            while((size=fis.read(buffer))!=-1){
	                content[tt]=new String(buffer, 0, size);
	                System.out.printf("%d:",tt);
	                System.out.println(content[tt]);
	                if(tt==6&&content[tt].equals("Skills"))
	                {
	                	ski=true;System.out.println("yes1");
	                }
	                if(ski==true&&content[tt].equals("Boom"))
	                {
	                	System.out.println("Boom~~~");
	                }
	                tt++;
	            }
	        //关闭此文件输入流并释放与此流有关的所有系统资源。 
	        fis.close();
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
		 System.out.printf("end the input of file\n");
		 try {
			    Thread.sleep(200);
			} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			    e.printStackTrace();
			}tt=2;
		//Battlefield bf=new Battlefield();
		bf.init_map();
		bf.show_of_battlefield();
		
		int i=0;
		bf. creat_hero1();bf.show_of_battlefield();
		try {
		    Thread.sleep(1000);
		} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		    e.printStackTrace();
		}
		while(i<tt)
		{
			if(i==0)
			{
				bf. creat_hero1();bf.show_of_battlefield();
			}
			else
			{
				bf.boom1();
			}
			i++;
			try {
			    Thread.sleep(1000);
			} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			    e.printStackTrace();
			}
		}//System.out.printf("Over");
	}

}
/*
class  print implements Runnable{
	
	public synchronized void run()
	{
		
		bf.show_of_battlefield();
	}
}


class read  implements Runnable{
	
	public synchronized void run()
	{
		System.out.printf("accept the input of file\n");
		String content[]=new String[55];
		int tt=0;
		boolean ski=false;
		 try {
	            int size=0;
	            //定义一个字节缓冲区,该缓冲区的大小根据需要来定义
	            byte[] buffer=new byte[1024];
	            FileInputStream fis=new FileInputStream(new File("C:\\Users\\BL8\\Desktop\\inputtext.txt"));
	           // FileReader fr=new FileReader(new File("C:\\Users\\BL8\\Desktop\\inputtext.txt"));
	            //循环来读取该文件中的数据
	            while((size=fis.read(buffer))!=-1){
	                content[tt]=new String(buffer, 0, size);
	                System.out.printf("%d:",tt);
	                System.out.println(content[tt]);
	                if(tt==6&&content[tt].equals("Skills"))
	                {
	                	ski=true;System.out.println("yes1");
	                }
	                if(ski==true&&content[tt].equals("Boom"))
	                {
	                	System.out.println("Boom~~~");
	                }
	                tt++;
	            }
	        //关闭此文件输入流并释放与此流有关的所有系统资源。 
	        fis.close();
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	}
}*/
